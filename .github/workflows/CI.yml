name: CI

on:
  push:
  release:
  workflow_dispatch:

jobs:

  conda_build:
      name: Conda Build (Python ${{matrix.python-version}} ${{ matrix.os }})
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: ["ubuntu-latest", "macos-latest"]
          python-version: ["3.7", "3.8", "3.9", "3.10"]
      steps:
        - uses: actions/checkout@v2
        - uses: conda-incubator/setup-miniconda@v2
          with:
            auto-update-conda: true
            python-version: ${{ matrix.python-version }}
        
        - name: Config Conda
          shell: bash -l {0}
          run: |
              conda install --channel conda-forge conda-build anaconda-client conda-verify
              conda config --add channels conda-forge
              conda config --add channels underworldcode
              conda config --set anaconda_upload no
  
        - name: Config Conda For Upload
          if: github.event_name == 'release'
          shell: bash -l {0}
          run: conda config --set anaconda_upload yes
  
        - name: Upload new Packages
          if: github.event_name == 'release'
          shell: bash -l {0}
          run: |
              anaconda login --hostname github-actions-${{ matrix.os  }}-$RANDOM --username ${{ secrets.ANACONDA_USERNAME }} --password ${{ secrets.ANACONDA_PASSWORD }}
              conda-build --channel conda-forge --user geo-down-under conda
              anaconda logout

  pypi:
    runs-on: ${{ matrix.os }}
    env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          pip install numpy
          pip install scipy
          pip install Cython
          
      - name: Provide gfortran
        if: startsWith(matrix.os, 'macos')
        run: |
          ln -s /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
      
      - name: Package for Pypi
        run: |
          python setup.py sdist
          python setup.py bdist_wheel
    
      - name: Upload to Pypi
        if: github.event_name == 'release'
        run: |
          python -m twine upload dist/* -r pypi --skip-existing
