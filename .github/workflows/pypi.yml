name: Build wheels

on: [push,release,workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # Disable building PyPy wheels on all platforms
          CIBW_SKIP: 'pp*'
          CIBW_ENVIRONMENT_WINDOWS: "CFLAGS='-lquadmath'"
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.7"
          CIBW_ARCHS: 'auto64'
          CIBW_BEFORE_BUILD_WINDOWS: "choco install ninja"
          CIBW_BEFORE_BUILD_MACOS: "brew install ninja gcc && brew reinstall gcc"
          # CIBW_BEFORE_BUILD_LINUX: "apt-get install -y ninja-build"
          CIBW_BEFORE_BUILD: "pip install numpy meson-python ninja setuptools build"
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/stripy/tests"
        #    ...
        # with:
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    # if: github.event_name == 'release' && github.event.action == 'published'
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # To test: repository-url: https://test.pypi.org/legacy/